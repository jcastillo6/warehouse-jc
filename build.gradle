plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'com.jcastillo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudAzureVersion', "5.5.0")
}

swaggerSources {
    def typeMappings = 'URI=URI'
    def importMappings = 'URI=java.net.URI'
    warehouse {
        def apiYaml = "${rootDir}/src/main/resources/api/openapi.yaml"
        def configJson = "${rootDir}/src/main/resources/api/config.json"
        inputFile = file(apiYaml)
        def ignoreFile = file("${rootDir}/src/main/resources/api/.openapi-generator-ignore")
        code {
            language = 'spring'
            configFile = file(configJson)
            rawOptions = ['--ignore-file-override', ignoreFile, '--type-mappings',
                          typeMappings, '--import-mappings', importMappings] as List<String>
            components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']
            jvmArgs = ['--add-opens=java.base/java.util=ALL-UNNAMED'] // for Swagger Codegen v3 on Java 16+

            //dependsOn validation // Should be uncommented once plugin starts supporting OA 3 validation
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.azure.spring:spring-cloud-azure-starter-actuator'
    implementation 'com.azure.spring:spring-cloud-azure-starter-data-cosmos'
    implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.2'
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.47'
    compileOnly 'io.swagger.core.v3:swagger-annotations:2.2.18'
    compileOnly 'org.openapitools:jackson-databind-nullable:0.2.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'io.rest-assured:rest-assured:5.3.2'
}

compileJava.dependsOn swaggerSources.warehouse.code
processResources.dependsOn generateSwaggerCodeWarehouse
sourceSets.main.java.srcDir "${swaggerSources.warehouse.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.warehouse.code.outputDir}/src/main/resources"

dependencyManagement {
    imports {
        mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
